apiVersion: v1
kind: ConfigMap
metadata:
  name: rollback-script
  namespace: kqi-system
data:
  entrypoint.sh: |-
    #!/bin/bash
    git clone https://github.com/KAMONOHASHI/kamonohashi -b $KQI_VERSION --depth 1;
    cd /kamonohashi/web-api/platypus/platypus;

    cat << EOS > DesignTimeDbContextFactory.cs
    using Microsoft.EntityFrameworkCore;
    using Microsoft.EntityFrameworkCore.Design;
    using Nssol.Platypus.DataAccess;

    namespace Nssol.Platypus
    {
        public class DesignTimeDbContextFactory : IDesignTimeDbContextFactory<CommonDbContext>
        {
            public CommonDbContext CreateDbContext(string[] args)
            {
                var builder = new DbContextOptionsBuilder<CommonDbContext>();
                var connectionString = "Server=postgres;Port=$POSTGRES_SERVICE_PORT;User Id=$POSTGRES_USER;Password=$POSTGRES_PASSWORD;Database=platypusdb;Integrated Security=False;Timeout=30";
                builder.UseNpgsql(connectionString);

                Startup.DefaultConnectionString = connectionString;
                return new CommonDbContext(builder.Options);
            }
        }
    }
    EOS

    dotnet ef database update $MIGRATION
    exit 0
    
---
apiVersion: v1
kind: Pod
metadata:
  name: rollback
  namespace: kqi-system
spec: 
  nodeSelector:
    kubernetes.io/hostname: "KQI_NODE"
  containers:
  - name: rollback-container
    image: mcr.microsoft.com/dotnet/core/sdk:2.1
    command: ["/bin/entrypoint.sh"]
    volumeMounts:
    - name: configmap-volume
      mountPath: /bin/entrypoint.sh
      subPath: entrypoint.sh
    env: 
    - name: KQI_VERSION
      value: "KQI_VERSION"
    - name: MIGRATION
      value: "MIGRATION"
    envFrom:
      - secretRef:
          name: postgres-credential
      - configMapRef:
          name: postgres-env
  volumes:
  - name: configmap-volume
    configMap:
      defaultMode: 0700
      name: rollback-script
  restartPolicy: Never
